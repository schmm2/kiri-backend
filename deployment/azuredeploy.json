{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "siteName": {
      "type": "string",
      "metadata": {
        "description": "The name of the app that you wish to create."
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources."
      }
    },
    "locationName": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources."
      }
    },
    "admins": {
      "defaultValue": "Administrators of this solutions",
      "type": "string"
    },
    "tagsByResource": {
      "type": "object",
      "defaultValue": {

      }
    }
  },
  "variables": {
    "storageAccountName": "[concat('kiri', uniqueString(resourceGroup().id))]",
    "frontendAppName": "[concat(parameters('siteName'),'')]",
    "functionAppName": "[concat(parameters('siteName'),'-backend')]",
    "keyVaulName": "[concat(parameters('siteName'),'-keyvault')]",
    "cosmosName": "[concat(parameters('siteName'),'-db')]",
    "functionWorkerRuntime": "node",
    "storageAccountType": "Standard_LRS",
    "mongoDbName": "kiri",
    "mongoDbServerVersion": "4.0",
    "mongoDbThroughput": 400
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2019-06-01",
      "name": "[variables('storageAccountName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "[variables('storageAccountType')]"
      },
      "kind": "Storage"
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2020-06-01",
      "name": "[variables('functionAppName')]",
      "location": "[parameters('location')]",
      "kind": "functionapp",
      "identity": {
        "type": "SystemAssigned"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
      ],
      "properties": {
        "siteConfig": {
          "appSettings": [
            {
              "name": "AzureWebJobsStorage",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';EndpointSuffix=', environment().suffixes.storage, ';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2019-06-01').keys[0].value)]"
            },
            {
              "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';EndpointSuffix=', environment().suffixes.storage, ';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2019-06-01').keys[0].value)]"
            },
            {
              "name": "WEBSITE_CONTENTSHARE",
              "value": "[toLower(variables('functionAppName'))]"
            },
            {
              "name": "FUNCTIONS_EXTENSION_VERSION",
              "value": "~2"
            },
            {
              "name": "WEBSITE_NODE_DEFAULT_VERSION",
              "value": "~10"
            },
            {
              "name": "FUNCTIONS_WORKER_RUNTIME",
              "value": "[variables('functionWorkerRuntime')]"
            }
          ]
        }
      },
      "resources": [
        {
          "name": "web",
          "type": "sourcecontrols",
          "apiVersion": "2019-08-01",
          "properties": {
            "RepoUrl": "https://github.com/schmm2/kiri-backend",
            "branch": "dev",
            "IsManualIntegration": true
          },
          "dependsOn": [
            "[resourceId('Microsoft.Web/sites', variables('functionAppName'))]"
          ]
        }
      ]
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2020-06-01",
      "name": "[variables('frontendAppName')]",
      "location": "[parameters('location')]",
      "kind": "functionapp",
      "resources": [
        {
          "name": "web",
          "type": "sourcecontrols",
          "apiVersion": "2019-08-01",
          "properties": {
            "RepoUrl": "https://github.com/schmm2/kiri-frontend",
            "branch": "dev",
            "IsManualIntegration": true
          },
          "dependsOn": [
            "[resourceId('Microsoft.Web/sites', variables('frontendAppName'))]"
          ]
        }
      ]
    },
    {
      "type": "Microsoft.KeyVault/vaults",
      "name": "[variables('keyVaulName')]",
      "apiVersion": "2019-09-01",
      "location": "[parameters('location')]",
      "properties": {
        "sku": {
          "family": "A",
          "name": "standard"
        },
        "tenantId": "[subscription().tenantid]",
        "accessPolicies": [
          {
            "tenantId": "[subscription().tenantid]",
            "objectId": "[reference(resourceId('Microsoft.Web/sites', variables('functionAppName')),'2019-08-01', 'full').identity.principalId]",
            "permissions": {
              "secrets": [
                "get",
                "list",
                "set"
              ]
            }
          }
        ],
        "enabledForDeployment": false,
        "enabledForDiskEncryption": false,
        "enabledForTemplateDeployment": false,
        "enableSoftDelete": true,
        "softDeleteRetentionInDays": 90
      },
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
      ]
    },
    {
      "type": "Microsoft.DocumentDB/databaseAccounts",
      "name": "[variables('cosmosName')]",
      "apiVersion": "2021-01-15",
      "location": "[parameters('location')]",
      "kind": "MongoDB",
      "properties": {
        "consistencyPolicy": {
          "defaultConsistencyLevel": "Session"
        },
        "locations": [
          {
            "isZoneRedundant": false,
            "failoverPriority": 0,
            "locationName": "Switzerland North"
          }
        ],
        "databaseAccountOfferType": "Standard",
        "apiProperties": {
          "serverVersion": "[variables('mongoDbServerVersion')]"
        }
      }
    }
  ]
} 
